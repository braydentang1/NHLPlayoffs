source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
View(predictions)
View(finalScores)
View(newdata)
View(predictions)
View(predictions[["Variable.Importance"]])
source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
View(finalScores)
data = read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")
View(data)
View(data)
View(data)
View(data)
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
data
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
ggplot(data, aes(factor(Month), EXCAUS)) + geom_boxplot(fill = "lightgreen") + stat_boxplot(geom ='errorbar') + labs(title = "Boxplot of Seasonality", subtitle = "Over The Period of January 1971 to April 2019", x = "Month", y = "Exchange Rate $1 USD in CAD") + scale_x_discrete(labels=month.abb)
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
ggseasonplot(data, season.labels = month.abb, year.labels = FALSE,
year.labels.left = FALSE, col = "green", labelgap = 0.04)
data
exponentialSmoothed = ets(data, ic = c("aicc"))
View(exponentialSmoothed)
forecast.exponentialSmoothed = forecast(exponentialSmoothed, bootstrap = TRUE)
View(forecast.exponentialSmoothed)
forecast.exponentialSmoothed[["mean"]]
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
#..........
exponentialSmoothed = ets(data, ic = c("aicc"))
View(exponentialSmoothed)
580-12
actual = data[568:length(data)]
actual = data[569:length(data)]
actual = data[length(data)-11:length(data)]
actual = data[(length(data)-11):length(data)]
actual = ts(data[(length(data)-11):length(data)], frequency = 12)
actual
data
train = window(data, start = c(2018,4))
train
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
test = data[-train]
test = window(data, start = c(2018, 5))
5 %% 3
1 %% 12
2 %% 12
3 %% 12
5/12
test = window(data, start = 2018 + 5/12)
test = window(data, start = 2018 + 4/12)
test
length(test)
test = window(data, start = 2018 + 4/12)
i = 1
train = window(data, start = 2018 + 4/12 + i/12)
data
train = window(data, end = 2019 + 4/12)
train = window(data, end = 2019 + 4/12)
train
test
train = window(data, end = 2018 + 2/12 + i/12)
train
test
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)
View(forecast.Model)
forecast.Model = forecast(model, h = 1)$mean
forecast.Model
RMSE = accuracy(forecast.Model, x = test)
RMSE
RMSE = accuracy(forecast.Model, x = test)[2]
test.OneAhead = test[i]
test.OneAhead = test[i]
train = window(data, end = 2018 + (2+i)/12)
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)$mean
RMSE = accuracy(forecast.Model, x = test.OneAhead)[2]
forecast.Model
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
test.OneAhead = test[i]
train = window(data, end = 2018 + (2+i)/12)
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)$mean
error[i] = accuracy(forecast.Model, x = test.OneAhead)[1]
}
error
mean(error^2)
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
#......................ETS Monthly Predictions.............................#
#Function that finds monthly RMSE one step ahead in time, with restimation of the model
evaluate.ETS = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
ETS = evalute.ETS(data)
ETS = evaluate.ETS(data)
evaluate.arima = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = auto.arima(train)
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
arima = evaluate.arima(data)
evaluate.arima = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = auto.arima(train, ic = "aicc", stationary = TRUE, stepwise = TRUE)
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
arima = evaluate.arima(data)
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
#......................ETS Monthly Predictions.............................#
#Function that finds monthly RMSE one step ahead in time, with restimation of the model
evaluate.ETS = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
evaluate.arima = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = auto.arima(train, ic = "aicc", stepwise = TRUE)
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = ts(read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
#......................ETS Monthly Predictions.............................#
#Function that finds monthly RMSE one step ahead in time, with restimation of the model
evaluate.ETS = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = ets(train, ic = "aicc")
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
evaluate.arima = function(data){
test = window(data, start = 2018 + 4/12)
error = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
model = auto.arima(train)
forecast.Model = forecast(model, h = 1)$mean
error[i] = (forecast.Model - test[i])^2
}
mean(error)^0.5
}
source('~/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Forecasting/Initial Exploration.R', echo=TRUE)
ETS = evaluate.ETS(data)
ARIMA = evaluate.arima(data)
data
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")
data.ts = ts(data$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data.ts, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data.ts), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
#......................ETS Monthly Predictions......................
View(data)
source('~/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Forecasting/Initial Exploration.R', echo=TRUE)
results = evaluate.Models(data)
results = evaluate.Models(data.ts)
library(tidyverse)
library(forecast)
#Will rename once we settle on some sort of methodology
#......................Import Data..........................................#
data = read_csv("C:/Users/Brayden/Documents/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Data/EXCAUS.csv")
data.ts = ts(data$EXCAUS, frequency = 12, start = c(1971,1), end = c(2019,4))
#......................Plot the Time Series.................................#
autoplot(data.ts, ts.colour = "black", ts.size = 1) + labs(title = "US/CAD Exchange Rate Over Time", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD", x = "Time")
autoplot(diff(data.ts), ts.colour = "black", ts.size = 1) +labs(title = "US/CAD Exchange Rate Over Time; 1st Order Differenced Series", subtitle = "Over The Period of January 1971 to April 2019", y = "$1 USD in CAD; Difference", x = "Time")
#......................Monthly Predictions.............................#
#Function that finds monthly RMSE one step ahead in time, with restimation of the model
evaluate.Models = function(data){
test = window(data, start = 2018 + 4/12)
error.ETS = vector("numeric", length(test))
error.Arima = vector("numeric", length(test))
for(i in 1:length(test)){
train = window(data, end = 2018 + (2+i)/12)
#ETS
ets.model = ets(train, ic = "aicc")
forecast.ets = forecast(ets.model, h = 1)$mean
error.ETS[i] = (forecast.ets - test[i])^2
#Auto.Arima
arima.model = auto.arima(train, stepwise = TRUE, ic = "aicc", stationary = TRUE)
forecast.arima = forecast(arima.model, h = 1)$mean
error.Arima[i] = (forecast.ets - test[i])^2
}
list(ETS = mean(error.ETS)^0.5, Auto.Arima = mean(error.Arima)^0.5)
}
results = evaluate.Models(data.ts)
View(results)
source('~/GitHub/US-to-CAD-Exchange-Rate-Forecasting/Forecasting/Initial Exploration.R', echo=TRUE)
results = evaluate.Models(data.ts)
