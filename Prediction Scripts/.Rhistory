source('~/GitHub/NHLPlayoffs/Modelling/Bagged Elastic Net.r', echo=TRUE)
logLoss = function(scores, label){
if (is.factor(label)){
u = ifelse(label ==  "W", 1,0)
} else{
u = label
}
tmp = data.frame(scores = scores, target = u)
tmp = tmp %>% mutate(scores = ifelse(scores == 1, 0.9999999999999999999, ifelse(scores == 0 , 0.0000000000000000001, scores))) %>%
mutate(logLoss = -(target * log(scores) + (1-target) * log(1-scores)))
mean(tmp$logLoss)
}
dump("logLoss", "logLoss.R")
source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
stopCluster(cluster)
source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
View(finalScores)
View(finalScores)
View(finalScores)
View(finalScores)
View(finalParameters)
View(finalScores)
View(finalParameters)
finalParameters[["validation.score"]]
View(finalScores)
View(template)
View(newdata)
View(template)
View(newdata)
View(allData)
source('~/GitHub/NHLPlayoffs/Prediction Scripts/Final Model.R', echo=TRUE)
View(template)
View(newdata)
View(finalParameters)
View(finalScores)
